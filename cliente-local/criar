#!/bin/bash -e

DEBIAN_FRONTEND=noninteractive

dpkg --add-architecture i386
apt update
apt -y -q upgrade
apt -y -q install curl dialog gnupg1 apt-utils htop nload nmap arp-scan wget tar unzip lib32z1 lib32ncurses5 nano vim bzip2 libbz2-1.0 locales vlc wireshark gdb tcpdump apt-transport-https traceroute speedtest-cli telnet iperf whois libc6-i386 lzop dirmngr

echo "Obtendo chaves públicas dos repositórios"

apt-key adv --recv-keys --keyserver keys.gnupg.net E1F958385BFE2B6E
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90
wget -O - http://repo.vivaldi.com/stable/linux_signing_key.pub | apt-key add -
wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
wget -q -O - https://deb.opera.com/archive.key | apt-key add -
wget -q -O - http://archive.raspberrypi.org/debian/raspberrypi.gpg.key | apt-key add -
wget -O - http://download.videolan.org/pub/debian/videolan-apt.asc | apt-key add -

cat << EOF > /etc/apt/sources.list
# Repositório padrão
deb http://debian.pop-sc.rnp.br/debian stretch main contrib non-free

# Atualizações
deb http://debian.pop-sc.rnp.br/debian stretch-updates main contrib non-free

# Atualizações de segurança
deb http://security.debian.org stretch/updates main contrib non-free

# Repositório Backports
deb http://debian.pop-sc.rnp.br/debian stretch-backports main contrib non-free

# Repositório Debian Jessie
deb http://debian.pop-sc.rnp.br/debian/ jessie main contrib non-free

# Repositório Debian Wheezy
deb http://debian.pop-sc.rnp.br/debian/ wheezy main
EOF

echo "deb https://deb.opera.com/opera-stable/ stable non-free" > /etc/apt/sources.list.d/opera-stable.list
echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
echo "deb http://repo.vivaldi.com/stable/deb/ stable main" > /etc/apt/sources.list.d/vivaldi.list
echo "deb http://packages.x2go.org/debian stretch main" > /etc/apt/sources.list.d/x2go.list
echo "deb-src http://packages.x2go.org/debian stretch main" >> /etc/apt/sources.list.d/x2go.list
echo "deb http://repository.spotify.com stable non-free" > /etc/apt/sources.list.d/spotify.list
echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
echo "deb http://download.videolan.org/pub/debian/stable/ /" > /etc/apt/sources.list.d/videolancenter.list
echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" >> /etc/apt/sources.list.d/webup8java.list

apt update

echo "Instalando bibliotecas..."

apt -y -q install libglu1-mesa lib32z1 lib32ncurses5 libfreetype6:i386 libsm6:i386 libxrender1:i386 libfontconfig1:i386 libxext6:i386 libappindicator1 libdbusmenu-glib4 libdbusmenu-gtk4 libindicator7 libvirt0 libxft2:i386 libpng16-16 libpng16-16:i386 libtool libtool-bin libgamin0 libgtkmm-3.0-dev libdvdcss2

echo "Instalando o ambiente gráfico bem como demais aplicações..."

apt -y -q install x2go-keyring x2goserver x2goserver-xsession mate-desktop-environment qasmixer qashctl qasconfig pavucontrol mate-themes okular libreoffice libreoffice-l10n-pt-br fluidsynth vlc-plugin-fluidsynth qsynth fluid-soundfont-gm audacity gdebi-core x2goclient x2gousbmount x2goserver-fmbindings xournal kolourpaint4 oracle-java8-installer oracle-java8-set-default fritzing fritzing-data fritzing-parts kicad ipython ipython3 glade python-glade2 geogebra latexila dia inkscape kdenlive gimp kile pinta gajim gajim-omemo gajim-triggers gajim-httpupload gajim-urlimagepreview pulseaudio-equalizer pitivi gnuradio gqrx-sdr virt-manager spotify-client playonlinux wine winetricks git clementine r-base r-base-dev less cmake vivaldi-stable unrar cutecom graphviz python-vte bridge-utils uml-utilities ipython3-qtconsole scratch squeak-vm squeak-plugins-scratch geany mcu8051ide qt4-designer spyder3 kalzium logisim grass tracker wxmaxima prerex vprerex rsyslog pcb maxima cantor google-chrome-stable opera-stable googleearth-package hexchat hexchat-otr hexchat-perl hexchat-plugins hexchat-python3 qgis qgis-common qgis-providers-common qgis-server ipython-qtconsole distcc nemiver mysql-workbench yad aqemu bluefish xemacs21 anjuta kmag gnome-subtitles

apt -y -q install -t stretch-backports octave liboctave-dev tilix
apt -y -q install -t jessie libssl1.0.0 eagle flashplugin-nonfree
apt -y -q install -t wheezy libpng12-0 libpng12-0:i386
ldconfig

cat << EOF > /etc/apt/sources.list
# Repositório padrão
deb http://debian.pop-sc.rnp.br/debian stretch main contrib non-free

# Atualizações
deb http://debian.pop-sc.rnp.br/debian stretch-updates main contrib non-free

# Atualizações de segurança
deb http://security.debian.org stretch/updates main contrib non-free
EOF

apt update

wget https://github.com/KELiON/cerebro/releases/download/v0.3.1/cerebro_0.3.1_amd64.deb -O /cerebro.deb
dpkg -i /cerebro.deb
rm -r /cerebro.deb

wget https://download1.rstudio.org/rstudio-xenial-1.1.453-amd64.deb -O /rstudio.deb
dpkg -i /rstudio.deb
rm -f /rstudio.deb

wget https://code-industry.net/public/master-pdf-editor-5.1.12_qt5.amd64.deb -O /master-pdf-editor.deb
bash -c 'echo -e "y\n" |gdebi /master-pdf-editor.deb'
rm -r /master-pdf-editor.deb

wget https://raw.githubusercontent.com/jpmsb/gui/master/scripts/arduino -O /usr/local/bin/arduino
chmod 755 /usr/local/bin/arduino

wget https://raw.githubusercontent.com/jpmsb/gui/master/scripts/habilitar-arduino -O /usr/local/bin/habilitar-arduino
chmod 755 /usr/local/bin/habilitar-arduino

wget jpmsb.sj.ifsc.edu.br/Ftool.exe -O /usr/local/bin/Ftool.exe
wget jpmsb.sj.ifsc.edu.br/ftoolicon.png -O /usr/share/icons/ftoolicon.png
wget jpmsb.sj.ifsc.edu.br/ftool.desktop -O /usr/share/applications/ftool.desktop

wget http://www.laurenceanthony.net/software/antconc/releases/AntConc357/AntConc_64bit.tar.gz -O /AntConc_64bit.tar.gz
tar -xvf /AntConc_64bit.tar.gz -C /
mv /AntConc_64bit /usr/local/bin/
mv /antconc_icon.png /usr/share/icons/
rm /help.pdf /license.pdf /version_history.pdf
chmod 755 /usr/local/bin/AntConc_64bit
chmod 444 /usr/share/icons/antconc_icon.png
rm -rf AntConc_64bit.tar.gz

mkdir /codeblocks
wget https://ufpr.dl.sourceforge.net/project/codeblocks/Binaries/17.12/Linux/Debian%20stable/codeblocks_17.12-1_amd64_stable.tar.xz -O /codeblocks/codeblocks.tar.xz
tar -xvf /codeblocks/codeblocks.tar.xz -C /codeblocks/
dpkg -i /codeblocks/*.deb
rm -r /codeblocks

wget http://kdl1.cache.wps.com/ksodl/download/linux/a21//wps-office_10.1.0.5707~a21_amd64.deb -O /wpsoffice.deb
dpkg -i /wpsoffice.deb
rm -rf /wpsoffice.deb

apt -y -q install mu python-gpiozero python3-gpiozero
echo "# deb http://archive.raspberrypi.org/debian/ stretch main ui" > /etc/apt/sources.list.d/raspi.list
apt update

echo "Criando comando quartus..."

cat << EOF > /usr/local/bin/quartus
#!/bin/bash
 
case ${1} in
    "-16")
        VERSAO="16.0"
        ;;
    "-h")
        echo "Use: quartus [-13|-16]."
        exit 1
        ;;
    *)
        VERSAO="13.0sp1"
        ;;
esac
 
cd /opt/altera/${VERSAO}/quartus/bin
exec ./quartus
EOF

echo "Criando atalho do Android Studio..."

cat << EOF > /usr/share/applications/android-studio.desktop
#!/usr/bin/env xdg-open
[Desktop Entry]
Type=Application
Categories=Development;
Terminal=false
Exec=/usr/local/bin/android-studio
Name=Android Studio
Comment=Desenvolvimento de aplicativos para Smartphones Android
Icon=/opt/ANDROID3/android-studio/bin/studio.png
EOF

echo "Criando atalho do AntConc..."

cat << EOF > /usr/share/applications/antconc.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=AntConc 3.5.7 2018
Comment=AntConc is a freeware, multiplatform tool for carrying out corpus linguistics research and data-driven learning.
Exec=/usr/local/bin/AntConc_64bit
Icon=/usr/share/icons/antconc_icon.png
Terminal=false
Type=Application
Categories=Education;
EOF

echo "Criando atalho do Arduino..."

cat << EOF > /usr/share/applications/arduino.desktop
[Desktop Entry]
Type=Application
Name=Arduino IDE
GenericName=Create physical computing projects
Exec=arduino
Icon=/opt/arduino-1.8.5/lib/icons/256x256/apps/arduino.png
Terminal=false
Categories=Development;Engineering;Electronics;
MimeType=text/x-arduino
Keywords=embedded electronics;electronics;avr;microcontroller;
EOF

echo "Criando atalho do Astah..."

cat << EOF > /usr/share/applications/astah.desktop
[Desktop Entry]
Encoding=UTF-8
Name=Astah Community
Comment=Astah Community
Exec=/opt/astah_community/astah
Icon=/opt/astah_community/astah-community.png
Terminal=false
Type=Application
Categories=Application;Development
EOF

echo "Criando atalho do CLion..."

cat << EOF > /usr/share/applications/clion.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=CLion
Comment=A power tool For a power language
Exec=/opt/clion-2018/bin/clion.sh
Icon=/opt/clion-2018/bin/clion.svg
Terminal=false
Type=Application
Categories=Development
EOF

echo "Criando atalho do cmap..."

cat << EOF > /usr/share/applications/cmap.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=Cmap Tools
Comment=Cmap Tools
Exec=/opt/IHMCCmapTools/bin/CmapTools
Icon=/opt/IHMCCmapTools/cmap-logo.png
Terminal=false
Type=Application
Categories=Development
EOF

echo "Criando atalho do Firefox..."

cat << EOF > /usr/share/applications/firefox.desktop
[Desktop Entry]
Name=Mozilla Firefox
Name[pt_BR]=Navegador Web Mozilla Firefox
GenericName[pt_BR]=Navegador Web
Exec=/opt/firefox/firefox %u
Terminal=false
X-MultipleArgs=false
Type=Application
Icon=/opt/firefox/browser/chrome/icons/default/default128.png
Categories=Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/vnd.mozilla.xul+xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;
StartupWMClass=Firefox
StartupNotify=true
EOF

echo "Criando atalho do Ftool..."

cat << EOF > /usr/share/applications/ftool.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=Ftool 4.0
Comment=Ferramenta de cálculo de estruturas
Exec=wine /usr/local/bin/Ftool.exe
Icon=/usr/share/icons/ftoolicon.png
Terminal=false
Type=Application
Categories=Development
EOF

echo "Criando atalho do MatLab 2015..."

cat << EOF > /usr/share/applications/matlab2015a.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Type=Application
Icon=/opt/matlab/R2015a/matlab_logo_preview.png
Name=Matlab 2015a
Comment=Start MATLAB 2015a - The Language of Technical Computing
Exec=/opt/matlab/R2015a/bin/matlab -desktop
Terminal=false
Categories=Development;
EOF

echo "Criando atalho do Mu Editor..."

cat << EOF > /usr/share/applications/mu.desktop
[Desktop Entry]
Type=Application
Name=mu
GenericName=A Python editor for beginner programmers 
Comment=A Python editor for beginner programmers
Icon=/usr/share/icons/hicolor/256x256/apps/mu.png
TryExec=mu
Exec=/usr/bin/mu
Terminal=false
Categories=Application;Development;
Keywords=Python;Editor;microbit;micro:bit;
EOF

echo "Criando atalho do Musixmatch..."

cat << EOF > /usr/share/applications/musixmatch.desktop
[Desktop Entry]
Name=Musixmatch
Comment=Musixmatch Desktop App
Exec=/opt/Musixmatch/musixmatch
Terminal=false
Type=Application
Icon=musixmatch
Categories=AudioVideo;Video;Player;TV;
EOF

echo "Criando atalho do Netbeans..."

cat << EOF > /usr/share/applications/netbeans-8.2.desktop
[Desktop Entry]
Encoding=UTF-8
Name=NetBeans IDE 8.2
Comment=The Smarter Way to Code
Exec=/bin/sh '/opt/netbeans-8.2/bin/netbeans'
Icon=/opt/netbeans-8.2/nb/netbeans.png
Categories=Application;Development;Java;IDE
Version=1.0
Type=Application
Terminal=0
EOF

echo "Criando atalho do Netkit..."

cat << EOF > /usr/share/applications/netkit.desktop
[Desktop Entry]
Encoding=UTF-8
Name=Gnome-Netkit2
Comment=Gnome interface to Netkit
Type=Application
Icon=/opt/netkit2/contrib/ifsc.png
Terminal=false
Categories=GNOME;Application;Education;
StartupNotify=true
Exec=/opt/netkit2/bin/netkit2
Name[pt_BR]=Netkit2
Comment[pt_BR]=Gnome interface to Netkit2
EOF

echo "Criando atalho do PyCharm..."

cat << EOF > /usr/share/applications/pycharm.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=PyCharm
Comment=All Python tools in one place
Exec=/opt/pycharm-2018.1/bin/pycharm.sh
Icon=/opt/pycharm-2018.1/bin/pycharm.png
Terminal=false
Type=Application
Categories=Development
EOF

echo "Criando atalho do Quartus 13.0sp1..."

cat << EOF > /usr/share/applications/quartus13.0sp1.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=Quartus II Subscription Edition v13.0sp1
Comment=Quartus II design software for Altera FPGA's
Exec=/opt/altera/13.0sp1/quartus/bin/quartus
Icon=/opt/altera/13.0sp1/quartus/adm/quartusii.png
Terminal=true
Type=Application
Categories=Development
EOF

echo "Criando atalho do Quartus 16..."

cat << EOF > /usr/share/applications/quartus16.0.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=Quartus II Subscription Edition v16.0
Comment=Quartus II design software for Altera FPGA's
Exec=/opt/altera/16.0/quartus/bin/quartus
Icon=/opt/altera/13.0sp1/quartus/adm/quartusii.png
Terminal=false
Type=Application
Categories=Development
EOF

echo "Criando atalho do RStudio..."

cat << EOF > /usr/share/applications/rstudio.desktop
[Desktop Entry]
Exec=/usr/lib/rstudio/bin/rstudio %F
Icon=rstudio
Type=Application
Terminal=false
Name=RStudio
Categories=Development;
EOF

cat << EOF > /usr/share/applications/trabalhos.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=SALVE SEUS TRABALHOS AQUI
Comment=Salve seus trabalhos aqui
Exec=caja /Trabalhos
Icon=/usr/share/icons/Adwaita/256x256/devices/drive-harddisk.png
Terminal=true
Type=Application
Categories=System
EOF

echo "Criando atalho do Visual Studio Code..."

cat << EOF > /usr/share/applications/visual-studio-code.desktop
[Desktop Entry]
Version=1.0
Encoding=UTF-8
Name=Microsoft Visual Studio Code
Comment=IDE Microsoft Visual Studio Code
Exec=/opt/opt/VSCode-linux-x64/code
Icon=/opt/VSCode-linux-x64/resources/app/resources/linux/code.png
Terminal=false
Type=Application
Categories=Development
EOF

echo "Criando atalho do Zoiper..."

cat << EOF > /usr/share/applications/zoiper3-3.desktop
[Desktop Entry]
Type=Application
Name=Zoiper Softphone
Comment=Zoiper Softphone
Exec=/opt/Zoiper64/zoiper
Icon=/opt/Zoiper64/zoiper.png
Terminal=false
EOF

cat << EOF > /etc/bash.bashrc
# System-wide .bashrc file for interactive bash(1) shells.

# To enable the settings / commands in this file for login shells as well,
# this file has to be sourced in /etc/profile.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, overwrite the one in /etc/profile)
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '

# Commented out, don't overwrite xterm -T "title" -n "icontitle" by default.
# If this is an xterm set the title to user@host:dir
#case "$TERM" in
#xterm*|rxvt*)
#    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
#    ;;
#*)
#    ;;
#esac

# enable bash completion in interactive shells
#if ! shopt -oq posix; then
#  if [ -f /usr/share/bash-completion/bash_completion ]; then
#    . /usr/share/bash-completion/bash_completion
#  elif [ -f /etc/bash_completion ]; then
#    . /etc/bash_completion
#  fi
#fi

# if the command-not-found package is installed, use it
if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found ]; then
	function command_not_found_handle {
	        # check because c-n-f could've been removed in the meantime
                if [ -x /usr/lib/command-not-found ]; then
		   /usr/lib/command-not-found -- "$1"
                   return $?
                elif [ -x /usr/share/command-not-found/command-not-found ]; then
		   /usr/share/command-not-found/command-not-found -- "$1"
                   return $?
		else
		   printf "%s: command not found\n" "$1" >&2
		   return 127
		fi
	}
fi
export LM_LICENSE_FILE=1800@vm-lan2.sj.ifsc.edu.br
export MGLS_LICENSE_FILE=1800@vm-lan2.sj.ifsc.edu.br
export LD_LIBRARY_PATH=/opt/altera/13.0sp1/lib32
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/etc/omnetpp/bin
EOF

echo "America/Sao_Paulo" > /etc/timezone

cat << EOF > /etc/profile
# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).

if [ "`id -u`" -eq 0 ]; then
  PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
else
  PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
fi
export PATH

if [ "${PS1-}" ]; then
  if [ "${BASH-}" ] && [ "$BASH" != "/bin/sh" ]; then
    # The file bash.bashrc already sets the default PS1.
    # PS1='\h:\w\$ '
    if [ -f /etc/bash.bashrc ]; then
      . /etc/bash.bashrc
    fi
  else
    if [ "`id -u`" -eq 0 ]; then
      PS1='# '
    else
      PS1='$ '
    fi
  fi
fi

if [ -d /etc/profile.d ]; then
  for i in /etc/profile.d/*.sh; do
    if [ -r $i ]; then
      . $i
    fi
  done
  unset i
fi
export NETKIT2_HOME=/opt/netkit2
export PATH=$NETKIT2_HOME/bin:$PATH
export LANG=pt_BR.UTF-8
EOF

cat << EOF > /etc/sudoers
#
# This file MUST be edited with the 'visudo' command as root.
#
# Please consider adding local content in /etc/sudoers.d/ instead of
# directly modifying this file.
#
# See the man page for details on how to write a sudoers file.
#
Defaults	env_reset
Defaults	mail_badpass
Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root	ALL=(ALL:ALL) ALL

# Allow members of group sudo to execute any command
%sudo	ALL=(ALL:ALL) ALL

# See sudoers(5) for more information on "#include" directives:

#includedir /etc/sudoers.d
ALL   ALL=(root) NOPASSWD: SETENV: /opt/netkit2/bin/tap.py
ALL   ALL=(root) NOPASSWD: /usr/bin/traceroute
ALL   ALL=(root) NOPASSWD: /usr/sbin/tcpdump
ALL   ALL=(root) NOPASSWD: /usr/bin/wireshark
ALL   ALL=(root) NOPASSWD: /bin/chmod 1766 /dev/kvm
ALL   ALL=(root) NOPASSWD: /bin/chmod 1777 /dev/ttyACM*
EOF

cat << EOF > /etc/ssh/sshd_config
PermitRootLogin prohibit-password
PasswordAuthentication yes
ChallengeResponseAuthentication no
X11Forwarding yes
PrintMotd no
AcceptEnv LANG LC_*
Subsystem	sftp	/usr/lib/openssh/sftp-server
AllowedUsers ctic
EOF

sed -i '85s/.*/unix_sock_group = "aluno"/' /etc/libvirt/libvirtd.conf
sed -i '102s/.*/unix_sock_rw_perms = "0770"/' /etc/libvirt/libvirtd.conf

rm -r /etc/localtime
ln -snf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
dpkg-reconfigure -f noninteractive tzdata

echo "pt_BR.UTF-8 UTF-8" > /etc/locale.gen
echo 'LANG="pt_BR.UTF-8"' > /etc/default/locale
dpkg-reconfigure -f noninteractive locales
update-locale LANG=pt_BR.UTF-8

apt update
apt clean
apt clean cache
unset DEBIAN_FRONTEND
rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/* /root/.bash_history
mkdir /var/run/sshd
